name: Deploy image to self-hosted server

on:
  workflow_run: 
    workflows: ["CI Pipeline"]
    types:
      - completed    

env:
  SSH_KEY: ${{ secrets.SSH_KEY }}
  SSH_USER: ${{ secrets.SSH_USERNAME }}
  SSH_NODE_1: ${{ secrets.NODE_1 }}
  SSH_NODE_2: ${{ secrets.NODE_2 }}

jobs:
  deploy1:
    runs-on: self-hosted
    steps:
      - name: Deploying to server 1
        run: |
          # Save the SSH key from secrets to a file named myKey2.pem
          echo "${{ secrets.SSH_KEY }}" > myKey1.pem
          # Set the correct permissions for the SSH key file
          chmod 600 myKey1.pem
          # Connect to the remote server using SSH and myKey that I added to github secrets
          ssh -i myKey1.pem ${{ secrets.SSH_USERNAME }}@${{ secrets.NODE_1 }} << 'EOF'
          # Exit immediately if a command exits
          set -e
          cd /capstone-project
          git pull https://github.com/Nightylol911/capstone-project.git
          docker compose up -d --build
          rm -f myKey1.pem
          EOF
  deploy2:
    runs-on: self-hosted
    steps:
      - name: Deploying to server 2
        run: |
          echo "${{ secrets.SSH_KEY }}" > myKey2.pem
          chmod 600 myKey2.pem
          ssh -i myKey2.pem ${{ secrets.SSH_USERNAME }}@${{ secrets.NODE_2 }} << 'EOF'
          set -e
          cd /capstone-project
          git pull https://github.com/Nightylol911/capstone-project.git
          docker compose up -d --build
          rm -f myKey2.pem
          EOF